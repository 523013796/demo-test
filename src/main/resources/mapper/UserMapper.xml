<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zl.demotest.dao.member.UserDao" >
  <resultMap id="BaseResultMap" type="com.zl.demotest.pojo.member.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="age" property="age" jdbcType="TINYINT" />
    <result column="IDNumber" property="idnumber" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="WeChat" property="wechat" jdbcType="VARCHAR" />
    <result column="registertime" property="registertime" jdbcType="DATE" />
    <result column="major" property="major" jdbcType="INTEGER" />
    <result column="rank" property="rank" jdbcType="TINYINT" />
    <result column="studentNumber" property="studentnumber" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, age, IDNumber, phone, qq, WeChat, registertime, major, rank, studentNumber, 
    password
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByKey" resultMap="BaseResultMap">
    select * from user where ${key}=#{value}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zl.demotest.pojo.member.User" >
    insert into user (id, name, sex, age, 
      IDNumber, phone, qq, 
      WeChat, registertime, major, 
      rank, studentNumber, password
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{sex,jdbcType=BIT}, #{age,jdbcType=TINYINT}, 
      #{idnumber,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{wechat,jdbcType=VARCHAR}, #{registertime,jdbcType=DATE}, #{major,jdbcType=INTEGER}, 
      #{rank,jdbcType=TINYINT}, #{studentnumber,jdbcType=CHAR}, #{password,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zl.demotest.pojo.member.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="idnumber != null" >
        IDNumber,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="wechat != null" >
        WeChat,
      </if>
      <if test="registertime != null" >
        registertime,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="studentnumber != null" >
        studentNumber,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="age != null" >
        #{age,jdbcType=TINYINT},
      </if>
      <if test="idnumber != null" >
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null" >
        #{registertime,jdbcType=DATE},
      </if>
      <if test="major != null" >
        #{major,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=TINYINT},
      </if>
      <if test="studentnumber != null" >
        #{studentnumber,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.demotest.pojo.member.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="idnumber != null" >
        IDNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        WeChat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null" >
        registertime = #{registertime,jdbcType=DATE},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=TINYINT},
      </if>
      <if test="studentnumber != null" >
        studentNumber = #{studentnumber,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.demotest.pojo.member.User" >
    update user
    set name = #{name,jdbcType=CHAR},
      sex = #{sex,jdbcType=BIT},
      age = #{age,jdbcType=TINYINT},
      IDNumber = #{idnumber,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      WeChat = #{wechat,jdbcType=VARCHAR},
      registertime = #{registertime,jdbcType=DATE},
      major = #{major,jdbcType=INTEGER},
      rank = #{rank,jdbcType=TINYINT},
      studentNumber = #{studentnumber,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>